<jittershader name="sRGB2XYZ">
    <description>
    sRGB to XYZ color space conversion
    </description>

    <param name="tex0" type="int" default="0"/>

    <language name="glsl" version="1.2">
    <bind param="tex0" program="fp"/>
        <program name="vp" type="vertex">
<![CDATA[
   
#version 120
         
         varying vec2 texcoord0;
         varying vec2 texdim0;
         
         void main(void) {
         
         gl_Position = ftransform();
         texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
         texdim0 = vec2(abs(gl_TextureMatrix[0][0][0]), abs(gl_TextureMatrix[0][1][1]));
         
         }
   
   ]]>
        </program>
        <program name="fp" type="fragment">
<![CDATA[
         
#version 120
         
         varying vec2 texcoord0;
         uniform sampler2DRect tex0;
         
         void main(void) {
         
            vec4 colorIn = texture2DRect(tex0, texcoord0);
         
            //get the original rgb values as vec3
            vec3 srgb = colorIn.rgb;
         
            //create vec3 for each line of transformation matrix
            vec3 xMat = vec3(0.412453, 0.357580, 0.180423);
            vec3 yMat = vec3(0.212971, 0.71516, 0.072169);
            vec3 zMat = vec3(0.019334, 0.119193, 0.950227);
         
            //create xyz values from series of dot products
            vec3 xyz = vec3(dot(srgb,xMat), dot(srgb,yMat), dot(srgb,zMat));
         
            gl_FragColor = vec4(xyz.r, xyz.g, xyz.b, 1.0);
         }
   
   ]]>
        </program>
    </language>
</jittershader>
